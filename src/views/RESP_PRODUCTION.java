/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import model.TableLotLancesModel;
import model.TablePresseModel;

/**
 *
 * @author quent
 */
public class RESP_PRODUCTION extends javax.swing.JFrame {

    /**
     * Creates new form FrameResProd
     */
    public RESP_PRODUCTION() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labProduction = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabLot = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabPresse = new javax.swing.JTable();
        butDemarrer = new javax.swing.JButton();
        butLotsDemarres = new javax.swing.JButton();
        butActualiser = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labProduction.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        labProduction.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labProduction.setText("Service Production - Lots Lanc√©s");

        tabLot.setModel(new model.TableLotLancesModel());
        jScrollPane1.setViewportView(tabLot);

        tabPresse.setModel(new TablePresseModel());
        tabPresse.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                tabPresseComponentHidden(evt);
            }
        });
        jScrollPane2.setViewportView(tabPresse);

        butDemarrer.setText("DEMARRER LOT");
        butDemarrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDemarrerActionPerformed(evt);
            }
        });

        butLotsDemarres.setText("LOTS EN COURS DE PRODUCTION");
        butLotsDemarres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butLotsDemarresActionPerformed(evt);
            }
        });

        butActualiser.setText("ACTUALISER");
        butActualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butActualiserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labProduction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(butDemarrer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(butLotsDemarres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(butActualiser)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labProduction)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(butDemarrer, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(butLotsDemarres, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(butActualiser, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabPresseComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tabPresseComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_tabPresseComponentHidden
    
     public static JTable getTabLot() {
        return tabLot;
    }
      public static JTable getTabPresse() {
        return tabPresse;
    }
   
    private void butDemarrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDemarrerActionPerformed
        
        if (tabLot.getSelectedRowCount() == 0 || tabPresse.getSelectedRowCount() == 0) 
        {            
            JOptionPane.showMessageDialog(this, "Veuillez selectionner un lot et une presse");
        }
           else if(tabLot.getSelectedRowCount()== 1 && tabPresse.getSelectedRowCount() == 1){
        
       PUdemarrer popupDemarrer = new PUdemarrer();
                    popupDemarrer.setVisible(true);
                    popupDemarrer.abonner(new EcouteurWindows());
                    
            }
            
         else {
            JOptionPane.showMessageDialog(this, "Ne selectionnez qu'un seul lot et une seule presse");
        }
    }//GEN-LAST:event_butDemarrerActionPerformed

    private void butLotsDemarresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butLotsDemarresActionPerformed
      
        FrameLotsDemarres lotsdemarres = new FrameLotsDemarres();      
      lotsdemarres.setVisible(true);
      lotsdemarres.abonner(new EcouteurWindows());      
    }//GEN-LAST:event_butLotsDemarresActionPerformed

    private void butActualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butActualiserActionPerformed
      
     TablePresseModel model = (TablePresseModel) tabPresse.getModel();
            TableLotLancesModel model2 = (TableLotLancesModel) tabLot.getModel();
            model.refreshmodel();
            model2.refreshmodel(); 
        
    }//GEN-LAST:event_butActualiserActionPerformed



    class EcouteurWindows extends WindowAdapter {

        @Override
        public void windowClosed(WindowEvent e) {
            System.out.println("test");
            TablePresseModel model = (TablePresseModel) tabPresse.getModel();
            TableLotLancesModel model2 = (TableLotLancesModel) tabLot.getModel();
            model.refreshmodel();
            model2.refreshmodel();
            
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butActualiser;
    private javax.swing.JButton butDemarrer;
    private javax.swing.JButton butLotsDemarres;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labProduction;
    private static javax.swing.JTable tabLot;
    private static javax.swing.JTable tabPresse;
    // End of variables declaration//GEN-END:variables
}
